#include <string>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <vector>

#define HEAP_SIZE 1000000
#define ARRAY_SIZE 10

using namespace std;

int heap[HEAP_SIZE];
int heap_count=0;

void swap(int* a, int* b)
{
    int tmp=*a;
    *a=*b;
    *b=tmp;
}

void init()
{
    heap_count=0;
}

int size()
{
    return heap_count;
}

void push(int data)
{
    heap[++heap_count]=data;
    
    int child=heap_count;
    int parent=child/2;
    while(child>1&&heap[parent]>heap[child])
    {
        swap(&heap[parent],&heap[child]);
        child=parent;
        parent=child/2;
    }
}

int pop()
{
    int result=heap[1];
    
    swap(&heap[1],&heap[heap_count]);
    heap_count--;
    
    int parent=1;
    int child=parent*2;
    if(child+1<=heap_count)
    {
        child=(heap[child]<heap[child+1])?child:child+1;
    }
    
    while(child<=heap_count&&heap[parent]>heap[child])
    {
        swap(&heap[parent],&heap[child]);
        
        parent=child;
        child=child*2;
        if(child+1<=heap_count)
        {
            child=(heap[child]<heap[child+1])?child:child+1;
        }
    }
    
    return result;
}
 
int solution(vector<int> scoville, int K) 
{
    int answer = 0;
    
    for(int i=0;i<scoville.size();i++)
    {
        push(scoville.at(i));
    }
    
    int a;
    int b;
    int c;
    int t=0;
    int sum=0;
    
    for(;;)
    {
        if(size()==1)
        {
            a=pop();
            if(a<K)
            {
                answer=-1;
                break;
            }
        }
        a=pop();
        b=pop();
        sum=a+(b*2);
        t++;
        push(sum);
        a=pop();
        if(a>=K)
        {
            answer=t;
            break;
        }
        else
        {
            push(a);
            continue;
        }
    }
    
    
    return answer;
}
